/**
 * Nordea Open Banking API
 * Open Banking API
 *
 * OpenAPI spec version: 2.2
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.3.1
 *
 * Do not edit the class manually.
 *
 */

(function(factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/AccountDetails1', 'model/AccountDetails2', 'model/AccountDetailsResponse', 'model/AccountInfo', 'model/AccountList', 'model/AccountListResponse', 'model/AccountNumber', 'model/BankInfo', 'model/ExternalError', 'model/ExternalErrorResponse', 'model/ExternalFailure', 'model/ExternalRequestEcho', 'model/ExternalResponseHeader', 'model/Link', 'model/Pagination', 'model/Transaction', 'model/TransactionList', 'model/TransactionListResponse', 'model/CreditTransaction', 'model/DebitTransaction', 'api/AccountsV2Api'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('./ApiClient'), require('./model/AccountDetails1'), require('./model/AccountDetails2'), require('./model/AccountDetailsResponse'), require('./model/AccountInfo'), require('./model/AccountList'), require('./model/AccountListResponse'), require('./model/AccountNumber'), require('./model/BankInfo'), require('./model/ExternalError'), require('./model/ExternalErrorResponse'), require('./model/ExternalFailure'), require('./model/ExternalRequestEcho'), require('./model/ExternalResponseHeader'), require('./model/Link'), require('./model/Pagination'), require('./model/Transaction'), require('./model/TransactionList'), require('./model/TransactionListResponse'), require('./model/CreditTransaction'), require('./model/DebitTransaction'), require('./api/AccountsV2Api'));
  }
}(function(ApiClient, AccountDetails1, AccountDetails2, AccountDetailsResponse, AccountInfo, AccountList, AccountListResponse, AccountNumber, BankInfo, ExternalError, ExternalErrorResponse, ExternalFailure, ExternalRequestEcho, ExternalResponseHeader, Link, Pagination, Transaction, TransactionList, TransactionListResponse, CreditTransaction, DebitTransaction, AccountsV2Api) {
  'use strict';

  /**
   * Open_Banking_API.<br>
   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
   * <p>
   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
   * <pre>
   * var NordeaOpenBankingApi = require('index'); // See note below*.
   * var xxxSvc = new NordeaOpenBankingApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyyModel = new NordeaOpenBankingApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
   * and put the application logic within the callback function.</em>
   * </p>
   * <p>
   * A non-AMD browser application (discouraged) might do something like this:
   * <pre>
   * var xxxSvc = new NordeaOpenBankingApi.XxxApi(); // Allocate the API class we're going to use.
   * var yyy = new NordeaOpenBankingApi.Yyy(); // Construct a model instance.
   * yyyModel.someProperty = 'someValue';
   * ...
   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
   * ...
   * </pre>
   * </p>
   * @module index
   * @version 2.2
   */
  var exports = {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient: ApiClient,
    /**
     * The AccountDetails1 model constructor.
     * @property {module:model/AccountDetails1}
     */
    AccountDetails1: AccountDetails1,
    /**
     * The AccountDetails2 model constructor.
     * @property {module:model/AccountDetails2}
     */
    AccountDetails2: AccountDetails2,
    /**
     * The AccountDetailsResponse model constructor.
     * @property {module:model/AccountDetailsResponse}
     */
    AccountDetailsResponse: AccountDetailsResponse,
    /**
     * The AccountInfo model constructor.
     * @property {module:model/AccountInfo}
     */
    AccountInfo: AccountInfo,
    /**
     * The AccountList model constructor.
     * @property {module:model/AccountList}
     */
    AccountList: AccountList,
    /**
     * The AccountListResponse model constructor.
     * @property {module:model/AccountListResponse}
     */
    AccountListResponse: AccountListResponse,
    /**
     * The AccountNumber model constructor.
     * @property {module:model/AccountNumber}
     */
    AccountNumber: AccountNumber,
    /**
     * The BankInfo model constructor.
     * @property {module:model/BankInfo}
     */
    BankInfo: BankInfo,
    /**
     * The ExternalError model constructor.
     * @property {module:model/ExternalError}
     */
    ExternalError: ExternalError,
    /**
     * The ExternalErrorResponse model constructor.
     * @property {module:model/ExternalErrorResponse}
     */
    ExternalErrorResponse: ExternalErrorResponse,
    /**
     * The ExternalFailure model constructor.
     * @property {module:model/ExternalFailure}
     */
    ExternalFailure: ExternalFailure,
    /**
     * The ExternalRequestEcho model constructor.
     * @property {module:model/ExternalRequestEcho}
     */
    ExternalRequestEcho: ExternalRequestEcho,
    /**
     * The ExternalResponseHeader model constructor.
     * @property {module:model/ExternalResponseHeader}
     */
    ExternalResponseHeader: ExternalResponseHeader,
    /**
     * The Link model constructor.
     * @property {module:model/Link}
     */
    Link: Link,
    /**
     * The Pagination model constructor.
     * @property {module:model/Pagination}
     */
    Pagination: Pagination,
    /**
     * The Transaction model constructor.
     * @property {module:model/Transaction}
     */
    Transaction: Transaction,
    /**
     * The TransactionList model constructor.
     * @property {module:model/TransactionList}
     */
    TransactionList: TransactionList,
    /**
     * The TransactionListResponse model constructor.
     * @property {module:model/TransactionListResponse}
     */
    TransactionListResponse: TransactionListResponse,
    /**
     * The CreditTransaction model constructor.
     * @property {module:model/CreditTransaction}
     */
    CreditTransaction: CreditTransaction,
    /**
     * The DebitTransaction model constructor.
     * @property {module:model/DebitTransaction}
     */
    DebitTransaction: DebitTransaction,
    /**
     * The AccountsV2Api service constructor.
     * @property {module:api/AccountsV2Api}
     */
    AccountsV2Api: AccountsV2Api
  };

  return exports;
}));
